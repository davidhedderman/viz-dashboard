"""
Django settings for viz_dashboard project.

Generated by 'django-admin startproject' using Django 3.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import ldap
import os

from dotenv import load_dotenv
from pathlib import Path

from django_auth_ldap.config import (
    GroupOfNamesType,
    LDAPSearch,
)

# load environment variables
load_dotenv()

BASE_DIR = Path(__file__).resolve().parent.parent
PROJECT_DIR = BASE_DIR / 'viz_dashboard'
FRONTEND_DIR = BASE_DIR / 'vue-apps'

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('DJANGO_SECRET')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # other apps
    'compressor',
    'django.contrib.sites',
    'webpack_loader',
    'widget_tweaks',
    # auth stuff
    'allauth',
    'allauth.account',
    # custom django apps
    'apps.dashboard',
    'apps.charts',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'viz_dashboard.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            PROJECT_DIR / 'templates',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'viz_dashboard.wsgi.application'

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('DB_NAME'),
        'USER': os.environ.get('DB_USER'),
        'PASSWORD': os.environ.get('DB_PASS'),
        'PORT': os.environ.get('DB_PORT', 5432),
        'HOST': os.environ.get('DB_HOST', 'localhost'),
    }
}

SITE_ID = 1

AUTHENTICATION_BACKENDS = [
    'django_auth_ldap.backend.LDAPBackend',
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

ACCOUNT_ADAPTER = 'apps.users.adapter.UsersAdapter'  # To handle what happens after the login
ACCOUNT_EMAIL_REQUIRED = False
ACCOUNT_USERNAME_REQUIRED = True

# LDAP config
AUTH_LDAP_SERVER_URI = os.environ.get(
    'AUTH_LDAP_SERVER_URI',
    'ldap://example.com',
)
AUTH_LDAP_USER_SEARCH = LDAPSearch(
    os.environ.get('AUTH_LDAP_BASE_DN', default='ou=people,dc=example,dc=com'),
    ldap.SCOPE_SUBTREE,
    os.environ.get('AUTH_LDAP_FILTERSTR', default='(&(objectClass=posixAccount)(uid=%(user)s))'),
)
AUTH_LDAP_USER_ATTR_MAP = {
    "username": "uid",
    "email": "mail",
}
# AUTH_LDAP_USER_FLAGS_BY_GROUP = {  # TODO
#     'is_staff': 'cn=djangoadmins,dc=example,dc=com',
#     'is_superuser': 'cn=djangoadmins,dc=example,dc=com',
# }
AUTH_LDAP_GROUP_SEARCH = LDAPSearch(
    os.environ.get(
        'AUTH_LDAP_GROUP_BASE_DN',
        default="ou=groups,dc=example,dc=com",
    ),
    ldap.SCOPE_SUBTREE,
    os.environ.get('AUTH_LDAP_GROUP_FILTERSTR', default="(objectClass=posixGroup)")
)
AUTH_LDAP_GROUP_TYPE = GroupOfNamesType()

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = (
    PROJECT_DIR / 'static',
)
STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
)
STATIC_ROOT = BASE_DIR / 'static'

WEBPACK_LOADER = {
    'DEFAULT': {
        'BUNDLE_DIR_NAME': '/bundles/',  # must end with slash
        'STATS_FILE': FRONTEND_DIR / 'webpack-stats.json',
    }
}
